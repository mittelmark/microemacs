; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1998-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Mon Sep 21 1998
; Synopsis:    Visual Basic / FreeBasic Hook File, FreeBasic
; Authors:     Dave Yip, Steven Phillips & Detlef Groth
;
define-macro fhook-vb
    set-variable $buffer-mask "luh1"
    @# buffer-init "vb"
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-vb.name "Visual Basic"
set-variable .fhook-vb.setup &reg "/history/fhook/vb" "dfghiopx"
set-variable .fhook-vb.setup-mask "adefghikmoptux"
set-variable .fhook-vb.tags "vbtags"
set-variable .fhook-vb.comment "|'||'|' | '|r|"
set-variable .fhook-vb.indent-width 2
set-variable .fhook-vb.exact -1

; setup item-list
set-variable .fhook-vb.item-list-s1 "^[ \t]*\\(Private[ \t]+\\|Public[ \t]+\\)?Function[ \t]+\\(\\w+\\)[ \t]*("
set-variable .fhook-vb.item-list-r1 "Func \ecB\\2\ecA"
set-variable .fhook-vb.item-list-s2 "^[ \t]*\\(Private[ \t]+\\|Public[ \t]+\\)?Sub[ \t]+\\(\\w+\\)[ \t]*("
set-variable .fhook-vb.item-list-r2 "Sub  \ecB\\2\ecA"
set-variable .fhook-vb.item-list-s3 "^[ \t]*\\(Private[ \t]+\\|Public[ \t]+\\)?Property[ \t]+\\(Get\\|Let\\)[ \t]+\\(\\w+\\)[ \t]*("
set-variable .fhook-vb.item-list-r3 "Prop \ecB\\2 \\3\ecA"

set-variable .fhook-vb.collapse-open  "^\\(Private[ \t]+\\|Public[ \t]+\\)?\\(Function\\|Sub\\|Property\\)"
set-variable .fhook-vb.collapse-close "^End[ \t]+\\(Function\\|Sub\\|Property\\)"
set-variable .fhook-vb.collapse-mclose "1"
set-variable .fhook-vb.collapse-mnext "-1"

!if &not &exist .hilight.vb
    set-variable .hilight.vb &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-vb.setup &band .hilight.flags 0x02 
    ; Comments, strings & goto labels
    0 hilight .hilight.vb 3 100          $global-scheme
    hilight .hilight.vb 4 "\"" "\"" ""   .scheme.string
    hilight .hilight.vb 2 "^#"           .scheme.prepro
    hilight .hilight.vb 2 "'"            .scheme.comment
    hilight .hilight.vb 0 "^\\w+:"       .scheme.link
    ; Operators
    hilight .hilight.vb 0 "<>"           .scheme.operator
    hilight .hilight.vb 1 "And"          .scheme.operator
    hilight .hilight.vb 1 "Is"           .scheme.operator
    hilight .hilight.vb 1 "Not"          .scheme.operator
    hilight .hilight.vb 1 "Or"           .scheme.operator
    hilight .hilight.vb 1 "Xor"          .scheme.operator
    ; Constants
    hilight .hilight.vb 1 "True"         .scheme.prepro
    hilight .hilight.vb 1 "False"        .scheme.prepro
    hilight .hilight.vb 1 "Nothing"      .scheme.prepro
    hilight .hilight.vb 1 "Binary"       .scheme.prepro
    hilight .hilight.vb 1 "Access"       .scheme.prepro
    hilight .hilight.vb 1 "Read"         .scheme.prepro
    hilight .hilight.vb 1 "Write"        .scheme.prepro
    ; Keywords
    hilight .hilight.vb 1 "As"           .scheme.keyword
    hilight .hilight.vb 1 "Option"       .scheme.keyword
    hilight .hilight.vb 1 "If"           .scheme.keyword
    hilight .hilight.vb 1 "Else"         .scheme.keyword
    hilight .hilight.vb 1 "ElseIf"       .scheme.keyword
    hilight .hilight.vb 1 "Else If"      .scheme.error
    hilight .hilight.vb 1 "GoTo"         .scheme.keyword
    hilight .hilight.vb 1 "Then"         .scheme.keyword
    hilight .hilight.vb 1 "Case"         .scheme.keyword
    hilight .hilight.vb 1 "LCase"        .scheme.keyword
    hilight .hilight.vb 1 "Select"       .scheme.keyword
    hilight .hilight.vb 1 "begin"        .scheme.keyword
    hilight .hilight.vb 1 "End"          .scheme.keyword
    hilight .hilight.vb 1 "Exit"         .scheme.keyword
    hilight .hilight.vb 1 "Function"     .scheme.keyword
    hilight .hilight.vb 1 "While"        .scheme.keyword
    hilight .hilight.vb 1 "Until"        .scheme.keyword
    hilight .hilight.vb 1 "Wend"         .scheme.keyword
    hilight .hilight.vb 1 "Loop"         .scheme.keyword
    hilight .hilight.vb 1 "On"           .scheme.keyword
    hilight .hilight.vb 1 "Open"         .scheme.keyword
    hilight .hilight.vb 1 "Do"           .scheme.keyword
    hilight .hilight.vb 1 "Sub"          .scheme.keyword
    hilight .hilight.vb 1 "Set"          .scheme.keyword
    hilight .hilight.vb 1 "For"          .scheme.keyword
    hilight .hilight.vb 1 "To"           .scheme.keyword
    hilight .hilight.vb 1 "Step"         .scheme.keyword
    hilight .hilight.vb 1 "Next"         .scheme.keyword
    hilight .hilight.vb 1 "Property"     .scheme.keyword
    hilight .hilight.vb 1 "Error"        .scheme.keyword
    hilight .hilight.vb 1 "ReDim"        .scheme.keyword
    ; Types
    hilight .hilight.vb 1 "Attribute"    .scheme.type
    hilight .hilight.vb 1 "Boolean"      .scheme.type
    hilight .hilight.vb 1 "ByVal"        .scheme.type
    hilight .hilight.vb 1 "Collection"   .scheme.type
    hilight .hilight.vb 1 "Const"        .scheme.type
    hilight .hilight.vb 1 "Declare"      .scheme.type
    hilight .hilight.vb 1 "Dim"          .scheme.type
    hilight .hilight.vb 1 "End\\s+Type" .scheme.type
    hilight .hilight.vb 1 "Explicit"     .scheme.type
    hilight .hilight.vb 1 "Explicit"     .scheme.type
    hilight .hilight.vb 1 "Global"       .scheme.type
    hilight .hilight.vb 1 "Integer"      .scheme.type
    hilight .hilight.vb 1 "Long"         .scheme.type
    hilight .hilight.vb 1 "New"          .scheme.type
    hilight .hilight.vb 1 "Object"       .scheme.type
    hilight .hilight.vb 1 "Private"      .scheme.type
    hilight .hilight.vb 1 "Public"       .scheme.type
    hilight .hilight.vb 1 "String"       .scheme.type
    hilight .hilight.vb 1 "Type"         .scheme.type
    !if &band .hilight.flags 0x04
        ; function definitions
        hilight .hilight.vb 0 "\\s\\{Function\\s+\\w+\\s?\\}(" .scheme.function
        hilight .hilight.vb 1 "End\\s+Function" .scheme.function
        hilight .hilight.vb 0 "\\s\\{Sub\\s+\\w+\\}(" .scheme.function
        hilight .hilight.vb 1 "End\\s+Sub"  .scheme.function
        hilight .hilight.vb 0 "\\s\\{Property\\s+Get\\s+\\w+\\}(" .scheme.function
        hilight .hilight.vb 0 "\\s\\{Property\\s+Let\\s+\\w+\\}(" .scheme.function
        hilight .hilight.vb 1 "End\\s+Property" .scheme.function
    !endif
    ; let html based files use the vb hilight for any VBScripts
    set-variable .hilight.vbscript .hilight.vb
!endif
!if &sin "d" .fhook-vb.setup
    ; Define the indentation tokens
    0 indent .hilight.vb 1 20
    indent .hilight.vb i "'"
    indent .hilight.vb i "^#"
    indent .hilight.vb e "\"" "\"" ""
    indent .hilight.vb N "Declare" -t
    indent .hilight.vb N "Function" t
    indent .hilight.vb N "Property" t
    indent .hilight.vb N "Sub" t
    ; A Then at the end of the line, then indent + i; otherwise this is
    ; a single line 'if ... then' and no indenation is required.
    indent .hilight.vb N "Then" t
    indent .hilight.vb N "Then\\s+\\w+" 0
    indent .hilight.vb N "Begin" t
    indent .hilight.vb S "Else" -t
    indent .hilight.vb S "Case" -t
    indent .hilight.vb N "Select\\s+Case" 2t
    indent .hilight.vb O "ElseIf" -t
    indent .hilight.vb O "End" -t
    ; the end in 'response.end' (common in asp) throws thing out  
    indent .hilight.vb o "\\.End\\s" 0
    indent .hilight.vb N "Type" t
    indent .hilight.vb S "Resume\\s+Next" 0
    indent .hilight.vb O "End\\s+Select" -2t
    indent .hilight.vb O "End\\s+Function" -t
    indent .hilight.vb O "End\\s+Property" -t
    indent .hilight.vb O "End\\s+Sub" -t
    indent .hilight.vb O "End\\s+Type" -t
    indent .hilight.vb O "Exit\\s+For" 0
    indent .hilight.vb O "Exit\\s+Function" 0
    indent .hilight.vb O "Exit\\s+Property" 0
    indent .hilight.vb O "Exit\\s+Sub" 0
    indent .hilight.vb N "While" t
    indent .hilight.vb N "Do\\s+While" t
    indent .hilight.vb N "Do" t
    indent .hilight.vb O "Wend" -t
    indent .hilight.vb O "Loop" -t
    indent .hilight.vb O "Loop\\s+While" -t
    indent .hilight.vb O "Exit\\s+Do" 0
    indent .hilight.vb N "For" t
    indent .hilight.vb O "Next" -t
    indent .hilight.vb f "^\\w+:" 0
    ; ignore the rest of an open line as it may contain a For
    indent .hilight.vb I "Open" t
    ;indent .hilight.vb c "\_" t
    ; let html based files use the vb indent for any VBScripts
    set-variable .indent.vbscript .hilight.vb
!endif

0 define-macro fhook-vb-replace
  -1 buffer-mode "view"
  beginning-of-buffer
  replace-string "bas(\\([0-9]+\\)) error " "bas:\\1:0 error "
  beginning-of-buffer
  -1 buffer-mode "edit"
  1 buffer-mode "view"  
!emacro

; settings for FreeBasic compiler
set-variable %fhook-vb-lint   "fbc -c -b %f"
set-variable %fhook-vb-format "restyle-buffer"
set-variable %fhook-vb-exec   "fbc -b %f -x %b && ./%b"

buffer-init-fhook "vb"
