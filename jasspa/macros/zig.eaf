 "" "<FOLD-> \ecCProgram Flow:\ecA"
if "if (\p) {\r\r}\P" "  if"
elif "else if (\p) {\r\r}\P"  "  elif"
else "else {\r\p\r}\r\P" "  else"
for "for (\p) |item| {\r\r}\r\P" "  for"
while "while (\p) {\r\r}\r\P" "  while"
fn "fn \p() void {\r\r}\r\P" "  fn"
pfn "pub fn \p() void {\r\r}\r\P" "  pfn"
main "pub fn main () void {\r\p\r}\r\P" "  main"
print "std.debug.print(\p)\P" "  print"
enum "const \p = enum {\r\r}\r\P" "  enum"
struct "const \p = estruct {\r\r}\r\P" "  enum"
 "" ""
 "" "</FOLD><FOLD-> \ecCFile IO:\ecA"
fs "const fs = std.fs;\r" " fs" 
openr "const file = try fs.cwd().openFile(\p, .{});\rconst reader = file.reader().any();\rvar buf: [1024]u8 = undefined;\rwhile (try reader.readUntilDelimiterOrEof(buf[0..], '\n')) |line| {\rstd.log.info("{s}", .{line});\r}\r\P" "  openr"
openw "const file = try std.fs.cwd().createFile(\p, .{});\rdefer file.close();\rvar writer = file.writer();\rtry writer.writeAll(\"Hello!\n\");\r\P" "  openw"
 "" "</FOLD>"
