; -!- emf -!-
;
; Copyright (C) 1999-2021 JASSPA (www.jasspa.com)
;
; This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
; copying information.
;
; Synopsis:    Swift mode hook
; Authors:     Steven Phillips & Zak Banbury
;
define-macro fhook-swift
  set-variable $buffer-mask "luh1"
  @# buffer-init "swift"
  buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-swift.setup &reg "/history/fhook/swift" "bdfghnopx"
set-variable .fhook-swift.setup-mask "abdefghikmnoptuxrv"
set-variable .fhook-swift.tags "ctags"
set-variable .fhook-swift.comment "|/*| */|*| * | * |fr|"
set-variable .fhook-swift.comment-1 "|/**| */|*| * | * |f|"
; Set up the collapse of functions
set-variable .fhook-swift.collapse-open   "^[a-zA-Z].*{$"
set-variable .fhook-swift.collapse-close  "^}"
set-variable .fhook-swift.collapse-mclose "1"
set-variable .fhook-swift.collapse-mnext  "-1"
; Set up menu items for Swift mode.
set-variable .fhook-swift.setup-flags   "|r|v|"
set-variable .fhook-swift.setup-labels  "|Brace highlighting|Limit '(' continuation indent to 5 indent widths|"
; setup item-list
set-variable .fhook-swift.item-list-s1 "^[ \t]*\\([a-zA-Z0-9_ \t]*[ \t]\\)?\\([a-zA-Z0-9_]+\\)[ \t]*([a-zA-Z0-9_,\t]*)[ \t]*{"
set-variable .fhook-swift.item-list-r1 "Func \CCb\\2\CCA"
set-variable .fhook-swift.item-list-s2 "^[ \t]*\\(public[ \t]+\\|private[ \t]+\\)?class[ \t]\\(\\w+\\)"
set-variable .fhook-swift.item-list-r2 "Clss \CCb\\2\CCA"

!if &not &exist .hilight.swift
  set-variable .hilight.swift &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-swift.setup &band .hilight.flags 0x02
  ; High-light Swift Mode
  0 hilight .hilight.swift 2 50            $global-scheme
  hilight .hilight.swift 2  "//"           .scheme.comment
  hilight .hilight.swift 20 "/\\*" "*/" "" .scheme.comment
  hilight .hilight.swift 4 "\"" "\"" "\\"  .scheme.string
  hilight .hilight.swift 0 "'.'"           .scheme.quote
  hilight .hilight.swift 0 "'\\\\.'"       .scheme.quote
  hilight .hilight.swift 0 "'\\\\'"        .scheme.error
  hilight .hilight.swift 0 "'\\\\''"       .scheme.quote
  ; Comment TODO's, i.e. /* TODO I need to do this */
  hilight .hilight.swift 20 "/\\*\\s+[Tt][Oo][Dd][Oo]" "*/" "" .scheme.error
  hilight .hilight.swift 18 "//\\s*[tT][oO][dD][oO]"           .scheme.error
  ; constants: A_CONSTANT_VARAIBLE
  hilight .hilight.swift 1    "[A-Z_]+"          .scheme.constant
  ; Swift keywords
  ; The following conventions are used:
  ; .scheme.type      primitive types
  ; .scheme.operator  flow control keywords
  ; .scheme.prepro    package declaration and imports
  ; .scheme.error     reserved keywords that have not been implemented
  ; .scheme.keyword   other swift keywords that are not covered above
  hilight .hilight.swift 1    "@objc"        .scheme.operator
  hilight .hilight.swift 1    "as"           .scheme.keyword
  hilight .hilight.swift 1    "break"        .scheme.keyword
  hilight .hilight.swift 1    "case"         .scheme.keyword
  hilight .hilight.swift 1    "class"        .scheme.keyword
  hilight .hilight.swift 1    "catch"        .scheme.keyword
  hilight .hilight.swift 1    "default"      .scheme.keyword
  hilight .hilight.swift 1    "defer"        .scheme.keyword
  hilight .hilight.swift 1    "do"           .scheme.keyword
  hilight .hilight.swift 1    "else"         .scheme.keyword
  hilight .hilight.swift 1    "false"        .scheme.constant
  hilight .hilight.swift 1    "for"          .scheme.keyword
  hilight .hilight.swift 1    "forEach"      .scheme.keyword
  hilight .hilight.swift 1    "func"         .scheme.keyword
  hilight .hilight.swift 1    "goto"         .scheme.keyword
  hilight .hilight.swift 1    "guard"        .scheme.operator
  hilight .hilight.swift 1    "if"           .scheme.keyword
  hilight .hilight.swift 0x22 "import"       .scheme.prepro
  hilight .hilight.swift 1    "in"           .scheme.keyword
  hilight .hilight.swift 1    "inout"        .scheme.operator
  hilight .hilight.swift 1    "internal"     .scheme.operator
  hilight .hilight.swift 1    "is"           .scheme.operator
  hilight .hilight.swift 1    "let"          .scheme.keyword
  hilight .hilight.swift 1    "nil"          .scheme.constant
  hilight .hilight.swift 1    "override"     .scheme.operator
  hilight .hilight.swift 1    "private"      .scheme.operator
  hilight .hilight.swift 1    "public"       .scheme.operator
  hilight .hilight.swift 1    "repeat"       .scheme.keyword
  hilight .hilight.swift 1    "return"       .scheme.keyword
  hilight .hilight.swift 1    "self"         .scheme.operator
  hilight .hilight.swift 1    "static"       .scheme.operator
  hilight .hilight.swift 1    "switch"       .scheme.keyword
  hilight .hilight.swift 1    "throw"        .scheme.keyword
  hilight .hilight.swift 1    "throws"       .scheme.keyword
  hilight .hilight.swift 1    "true"         .scheme.constant
  hilight .hilight.swift 1    "try"          .scheme.operator
  hilight .hilight.swift 1    "var"          .scheme.keyword
  hilight .hilight.swift 1    "while"        .scheme.keyword
  hilight .hilight.swift 1    "Bool"         .scheme.type
  hilight .hilight.swift 1    "Character"    .scheme.type
  hilight .hilight.swift 1    "Data"         .scheme.type
  hilight .hilight.swift 1    "Date"         .scheme.type
  hilight .hilight.swift 1    "Decimal"      .scheme.type
  hilight .hilight.swift 1    "Double"       .scheme.type
  hilight .hilight.swift 1    "CGFloat"      .scheme.type
  hilight .hilight.swift 1    "CGRect"       .scheme.type
  hilight .hilight.swift 1    "CGSize"       .scheme.type
  hilight .hilight.swift 1    "Float"        .scheme.type
  hilight .hilight.swift 1    "Int"          .scheme.type
  hilight .hilight.swift 1    "Int8"         .scheme.type
  hilight .hilight.swift 1    "Int16"        .scheme.type
  hilight .hilight.swift 1    "Int32"        .scheme.type
  hilight .hilight.swift 1    "Int64"        .scheme.type
  hilight .hilight.swift 1    "String"       .scheme.type
  hilight .hilight.swift 1    "UInt"         .scheme.type
  hilight .hilight.swift 1    "UInt8"        .scheme.type
  hilight .hilight.swift 1    "UInt16"       .scheme.type
  hilight .hilight.swift 1    "UInt32"       .scheme.type
  hilight .hilight.swift 1    "UInt64"       .scheme.type
  ; macOS types
  hilight .hilight.swift 1    "NSButton"     .scheme.type
  hilight .hilight.swift 1    "NSImage"      .scheme.type
  hilight .hilight.swift 1    "NSImageView"  .scheme.type
  hilight .hilight.swift 1    "NSStackView"  .scheme.type
  hilight .hilight.swift 1    "NSTextField"  .scheme.type
  hilight .hilight.swift 1    "NSTextView"   .scheme.type
  hilight .hilight.swift 1    "NSView"       .scheme.type
  hilight .hilight.swift 1    "NSViewController" .scheme.type
  ; iOS types
  hilight .hilight.swift 1    "UIButton"     .scheme.type
  hilight .hilight.swift 1    "UIImage"      .scheme.type
  hilight .hilight.swift 1    "UIImageView"  .scheme.type
  hilight .hilight.swift 1    "UILabel"      .scheme.type
  hilight .hilight.swift 1    "UIStackView"  .scheme.type
  hilight .hilight.swift 1    "UITextField"  .scheme.type
  hilight .hilight.swift 1    "UITextView"   .scheme.type
  hilight .hilight.swift 1    "UIView"       .scheme.type
  hilight .hilight.swift 1    "UIViewController" .scheme.type
  ; Hilight curly braces
  !if &sin "r" .fhook-swift.setup
    hilight .hilight.swift 1 "{"             .scheme.keyword
    hilight .hilight.swift 1 "}"             .scheme.keyword
  !endif
!endif
!if &sin "d" .fhook-swift.setup
  ; Use the 'C' indentation framework.
  0 indent .hilight.swift 12
  indent .hilight.swift "u" " * "
  !if &sin "v" .fhook-swift.setup
    ; limit continuation indentation
    indent .hilight.swift "x" 5t
  !endif
!endif

buffer-init-fhook "swift"
