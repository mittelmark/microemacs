; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2001-2025 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Tue, 11 Dec 2001
; Synopsis:    Euphoria language support
; Authors:     Rodolfo Valeiras, Steven Phillips and Detlef Groth
;
define-macro fhook-euphor
    set-variable $buffer-mask "luh1"
    @# buffer-init "euphor"
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-euphor.name "Euphoria"
set-variable .fhook-euphor.setup &reg "/history/fhook/euphor" "bdfghinopx"
set-variable .fhook-euphor.setup-mask "abdefghikmnoptux"
set-variable .fhook-euphor.comment "|--||--|-- | --|r|"
set-variable .fhook-euphor.indent-width 3
set-variable .fhook-euphor.exact -1

set-variable .fhook-euphor.collapse-open  "^\\(\\(global\\|public\\|export\\)[ \t]+\\)?\\(function\\|procedure\\|type\\)[ \t]+"
set-variable .fhook-euphor.collapse-close "^end[ \t]+\\(function\\|procedure\\|type\\)"
set-variable .fhook-euphor.collapse-mclose "1"
set-variable .fhook-euphor.collapse-mnext "-1"

; setup item-list
set-variable .fhook-euphor.item-list-s1 "^\\(global[ \t]+\\|public[ \t]+\\|export[ \t]+\\)?function[ \t]+\\(\\w+\\)"
set-variable .fhook-euphor.item-list-r1 "Func \ecB\\2\ecA"
set-variable .fhook-euphor.item-list-s2 "^\\(global[ \t]+\\|public[ \t]+\\|export[ \t]+\\)?type[ \t]+\\(\\w+\\)"
set-variable .fhook-euphor.item-list-r2 "Type \ecB\\2\ecA"
set-variable .fhook-euphor.item-list-s3 "^\\(global[ \t]+\\|public[ \t]+\\|export[ \t]+\\)?constant[ \t]+\\(\\w+\\)"
set-variable .fhook-euphor.item-list-r3 "Cons \ecB\\2\ecA"
set-variable .fhook-euphor.item-list-s4 "^\\(global[ \t]+\\|public[ \t]+\\|export[ \t]+\\)?procedure[ \t]+\\(\\w+\\)"
set-variable .fhook-euphor.item-list-r4 "Proc \ecB\\2\ecA"

!if &not &exist .hilight.euphor
    set-variable .hilight.euphor &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-euphor.setup &band .hilight.flags 0x02
  0 hilight .hilight.euphor 1 $global-scheme
  
  hilight .hilight.euphor 2 "--"           .scheme.comment
  hilight .hilight.euphor 2 "^#!/"         .scheme.header
  hilight .hilight.euphor 2 "^include"     .scheme.prepro
  hilight .hilight.euphor 1 "as"           .scheme.keyword
  hilight .hilight.euphor 1 "break"        .scheme.keyword
  hilight .hilight.euphor 1 "by"           .scheme.keyword
  hilight .hilight.euphor 1 "case"         .scheme.keyword
  hilight .hilight.euphor 1 "constant"     .scheme.keyword
  hilight .hilight.euphor 1 "continue"     .scheme.keyword
  hilight .hilight.euphor 1 "do"           .scheme.keyword
  hilight .hilight.euphor 1 "else"         .scheme.keyword
  hilight .hilight.euphor 1 "elsif"        .scheme.keyword
  hilight .hilight.euphor 1 "end"          .scheme.keyword
  hilight .hilight.euphor 1 "enum"         .scheme.keyword
  hilight .hilight.euphor 1 "exit"         .scheme.keyword
  hilight .hilight.euphor 1 "export"       .scheme.keyword
  hilight .hilight.euphor 1 "fallthru"     .scheme.keyword
  hilight .hilight.euphor 1 "for"          .scheme.keyword
  hilight .hilight.euphor 1 "function"     .scheme.keyword
  hilight .hilight.euphor 1 "global"       .scheme.keyword
  hilight .hilight.euphor 1 "if"           .scheme.keyword
  hilight .hilight.euphor 1 "label"        .scheme.keyword
  hilight .hilight.euphor 1 "namespace"    .scheme.keyword
  hilight .hilight.euphor 1 "procedure"    .scheme.keyword
  hilight .hilight.euphor 1 "public"       .scheme.keyword
  hilight .hilight.euphor 1 "return"       .scheme.keyword
  hilight .hilight.euphor 1 "then"         .scheme.keyword
  hilight .hilight.euphor 1 "to"           .scheme.keyword
  hilight .hilight.euphor 1 "type"         .scheme.keyword
  hilight .hilight.euphor 1 "while"        .scheme.keyword
  hilight .hilight.euphor 1 "with"         .scheme.keyword
  hilight .hilight.euphor 1 "else"         .scheme.keyword
  hilight .hilight.euphor 1 "with"         .scheme.keyword
  hilight .hilight.euphor 1 "without"      .scheme.keyword
  
  hilight .hilight.euphor 1 "object"       .scheme.type
  hilight .hilight.euphor 1 "sequence"     .scheme.type
  hilight .hilight.euphor 1 "atom"         .scheme.type
  hilight .hilight.euphor 1 "integer"      .scheme.type
  hilight .hilight.euphor 1 "TRUE"         .scheme.type ; include std/types.e
  hilight .hilight.euphor 1 "FALSE"        .scheme.type
  
  hilight .hilight.euphor 1 "and"          .scheme.operator
  hilight .hilight.euphor 1 "compare"      .scheme.operator
  hilight .hilight.euphor 1 "equal"        .scheme.operator
  hilight .hilight.euphor 1 "not"          .scheme.operator
  hilight .hilight.euphor 1 "or"           .scheme.operator
  hilight .hilight.euphor 1 "xor"          .scheme.operator
  
  hilight .hilight.euphor 1 "ifdef"        .scheme.prepro
  hilight .hilight.euphor 1 "elsifdef"     .scheme.prepro
  hilight .hilight.euphor 1 "elsedef  "    .scheme.prepro
  hilight .hilight.euphor 4 "\"" "\"" "\\" .scheme.string
  hilight .hilight.euphor 4 "'" "'" "\\"   .scheme.string
!endif

!if &sin "d" .fhook-euphor.setup
  0 indent .hilight.euphor 1 10
  
  indent .hilight.euphor N "function"      t
  indent .hilight.euphor O "end function" -t
  indent .hilight.euphor N "procedure"     t
  indent .hilight.euphor O "end procedure" -t
  indent .hilight.euphor N "type"          t
  indent .hilight.euphor O "end type"     -t
  indent .hilight.euphor N "for"           t
  indent .hilight.euphor O "end for"      -t
  indent .hilight.euphor N "while"         t
  indent .hilight.euphor O "end while"    -t
  indent .hilight.euphor N "if"            t
  indent .hilight.euphor S "elsif"        -t
  indent .hilight.euphor S "else"         -t
  indent .hilight.euphor O "end if"       -t
  indent .hilight.euphor N "ifdef"         t
  indent .hilight.euphor S "elsifdef"     -t
  indent .hilight.euphor S "elsedef"      -t
  indent .hilight.euphor O "end if"       -t
  indent .hilight.euphor i "--"
!endif

!if &not &seq &which "eui" "ERROR"
  set-variable %fhook-euphor-lint   "eui -test %f"
  set-variable %fhook-euphor-exec   "eui %f"  
  set-variable %fhook-euphor-format "restyle-buffer"
!endif


buffer-init-fhook "euphor"
