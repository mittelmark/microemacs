; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2025 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     2025-07-23
; Synopsis:    Julia Language hook
; Authors:     Detlef Groth
;
define-macro fhook-julia
    set-variable $buffer-mask "luh1"
    @# buffer-init "julia"
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-julia.setup &reg "/history/fhook/julia" "bdfghinopx"
set-variable .fhook-julia.setup-mask "adefghikmnoptux"
set-variable .fhook-julia.comment "|#=|=#|#|# | #|r|"

; Set up collapse for julia
set-variable .fhook-julia.collapse-open  "^\\(function \\|macro \\|struct \\)"
set-variable .fhook-julia.collapse-close "^end"
set-variable .fhook-julia.collapse-mclose "1"
set-variable .fhook-julia.collapse-mnext "-1"

; setup item-list
set-variable .fhook-julia.item-list-s1 "^[ \t]*function[ \t]+\\(\\w+\\)"
set-variable .fhook-julia.item-list-r1 "Func \ecB\\1\ecA"
set-variable .fhook-julia.item-list-s2 "^[ \t]*macro*[ \t]+\\(\\w+\\)"
set-variable .fhook-julia.item-list-r2 "Macr \ecB\\1\ecA"
set-variable .fhook-julia.item-list-s3 "^[ \t]*struct*[ \t]+\\(\\w+\\)"
set-variable .fhook-julia.item-list-r3 "Strc \ecB\\1\ecA"

!if &and &sin "h" .fhook-julia.setup &band .hilight.flags 0x02
  !if &not &exist .hilight.julia
    set-variable .hilight.julia &pinc .hilight.next 1
  !endif
  0 hilight .hilight.julia 0                     $global-scheme
  hilight   .hilight.julia 2 "#"                 .scheme.comment
  hilight   .hilight.julia 4 "#=" "=#" ""        .scheme.comment  
  hilight   .hilight.julia 2 "^#!"               .scheme.header
  hilight   .hilight.julia 4 "\"" "\"" "\\"      .scheme.string
  hilight   .hilight.julia 0 "\\["               .scheme.string
  hilight   .hilight.julia 0 "\\]"               .scheme.string
  ; Quote
  hilight   .hilight.julia 4 "'" "'" "\\"        .scheme.quote
  ; Variables
  ;hilight   .hilight.julia 1 "\\.real"           .scheme.variable
  hilight .hilight.julia 4  "\\$" "\\}\\W" ""    .scheme.variable
  hilight .hilight.julia 4  "@"   "\\}\\s" ""    .scheme.operator
  
  ; packages
  hilight   .hilight.julia 2 "^using"         .scheme.prepro
  hilight   .hilight.julia 2 "^module"        .scheme.prepro
  hilight   .hilight.julia 2 "^import"        .scheme.prepro
  ; Keywords
  hilight    .hilight.julia 1 "baremodule"    .scheme.keyword
  hilight    .hilight.julia 1 "begin"         .scheme.keyword
  hilight    .hilight.julia 1 "break"         .scheme.keyword
  hilight    .hilight.julia 1 "catch"         .scheme.keyword
  hilight    .hilight.julia 1 "const"         .scheme.keyword
  hilight    .hilight.julia 1 "continue"      .scheme.keyword
  hilight    .hilight.julia 1 "do"            .scheme.keyword
  hilight    .hilight.julia 1 "else"          .scheme.keyword
  hilight    .hilight.julia 1 "elseif"        .scheme.keyword
  hilight    .hilight.julia 1 "end"           .scheme.keyword
  hilight    .hilight.julia 1 "export"        .scheme.keyword
  hilight    .hilight.julia 1 "false"         .scheme.keyword
  hilight    .hilight.julia 1 "finally"       .scheme.keyword
  hilight    .hilight.julia 1 "for"           .scheme.keyword
  hilight    .hilight.julia 1 "function"      .scheme.keyword
  hilight    .hilight.julia 1 "global"        .scheme.keyword
  hilight    .hilight.julia 1 "if"            .scheme.keyword
  hilight    .hilight.julia 1 "let"           .scheme.keyword
  hilight    .hilight.julia 1 "local"         .scheme.keyword
  hilight    .hilight.julia 1 "macro"         .scheme.keyword
  hilight    .hilight.julia 1 "quote"         .scheme.keyword
  hilight    .hilight.julia 1 "return"        .scheme.keyword
  hilight    .hilight.julia 1 "struct"        .scheme.keyword
  hilight    .hilight.julia 1 "true"          .scheme.keyword
  hilight    .hilight.julia 1 "try"           .scheme.keyword
  hilight    .hilight.julia 1 "while"         .scheme.keyword
  ; types

  hilight    .hilight.julia 1 "Array"         .scheme.type
  hilight    .hilight.julia 1 "Float16"       .scheme.type
  hilight    .hilight.julia 1 "Float32"       .scheme.type
  hilight    .hilight.julia 1 "Float64"       .scheme.type
  hilight    .hilight.julia 1 "Bool"          .scheme.type
  hilight    .hilight.julia 1 "Char"          .scheme.type
  hilight    .hilight.julia 1 "Dict"          .scheme.type  
  hilight    .hilight.julia 1 "Int8"          .scheme.type
  hilight    .hilight.julia 1 "Int16"         .scheme.type
  hilight    .hilight.julia 1 "Int32"         .scheme.type
  hilight    .hilight.julia 1 "Int64"         .scheme.type
  hilight    .hilight.julia 1 "Int128"        .scheme.type  
  hilight    .hilight.julia 1 "NamedTuple"    .scheme.type
  hilight    .hilight.julia 1 "Set"           .scheme.type  
  hilight    .hilight.julia 1 "SortedDict"    .scheme.type  
  hilight    .hilight.julia 1 "UInt8"         .scheme.type
  hilight    .hilight.julia 1 "UInt16"        .scheme.type
  hilight    .hilight.julia 1 "UInt32"        .scheme.type
  hilight    .hilight.julia 1 "UInt64"        .scheme.type
  hilight    .hilight.julia 1 "UInt128"       .scheme.type
!endif

!if &sin "d" .fhook-julia.setup
  0 indent .hilight.julia 1 10
  indent .hilight.julia    N "function"        t
  indent .hilight.julia    N "macro"           t  
  indent .hilight.julia    O "end"            -t
  indent .hilight.julia    N "if"              t
  indent .hilight.julia    S "else"           -t
  indent .hilight.julia    S "elseif"         -t
  indent .hilight.julia    N "for"             t  
  indent .hilight.julia    N "while"           t    
  indent .hilight.julia    N "try"             t      
  indent .hilight.julia    S "catch"          -t        
  indent .hilight.julia    N "do"              t          
  indent .hilight.julia    N "begin"           t            
!endif

buffer-init-fhook "julia"

