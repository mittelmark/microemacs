 "" "<FOLD+> \ecCSh:\ecA"
if "if [ \p ] ; then\r  ;\r\B\Bfi\r\P" "  if"
ef "elif [ \p ] ; then\r\P" "  ef (elif)"
el "else\r  \p" "  el (else)"  
case "case $\pvar in\r    1) echo 'value is one' ;;\r2) echo 'value is two' ;;\r*) echo 'other value' ;;\r\B\B\B\Besac\r\P" "  case"
for "for i in 1 2 3\p; do\r\Techo $i\r;\B\B\B\Bdone\r\P" "  for"
forf "for file in *.\p; do\r\Techo $file\r;\B\Bdone\r\P" "  forf(ile)"
wh "while [ \p ]; do\r    ;\r\B\B\B\Bdone\P" "  wh(ile)"
un "until [ \p ]; do\r    ;\r\B\B\B\Bdone\P" "  un(til)"
se  "options=(op1 op2 op3)\rPS3=\"Select your option: \"\rselect option in \"${options[@]}\"; do\r  case\p\r\B\Bdone\r\P" "  se(lect)"
inp "echo -n 'Enter a value: '\rread \pval\recho $val\r\P" "  inp(ut)"
fun "function \p () {\r  if [ -z $1 ]; then\r   echo \"Usage: <funcname> arg1\"\rreturn 1\r\B\B\Bfi\r\B\B}\P"  "  fun(ction)"
ifp "if [ -z \"`which \p 2> /dev/null`\" ]; then\r    echo \"Error: program does not exists!\"\r\B\B\B\Bfi\r\P" "  ifp (check program)"
ifz "if [ -z \"$1\" ]; then\r  echo \"Usage: \p\"\rreturn\r\B\Bfi\r" "  ifz (check not $1)"
ifn "if [ -n \"$1\" ]; then\r  echo \"Usage: \p\"\rreturn\r\B\Bfi\r" "  ifz (check $1)"
iff  "if [ ! -f \"$\pfilename\" ]; then\r    echo \"Error: File '$filename' does not exists!\"\rreturn 1\r\B\B\B\Bfi\r\P" "  iff (check file)"
ifx  "if [ ${\pfilename##*.} = "ext" ]; then\r    echo \"Error: File '$filename' does have the extension .ext!\"\r\B\B\B\Bfi\r\P" "  ifx (check extension)"
 "" "" 
 "" "</FOLD><FOLD+> \ecCBash:\ecA"
bfor "for ((i = 1; i <= \p ; i++)); do\r  echo $i\r\B\Bdone\r\P" "  bfor"
bfoa "for \pvar in \"${arr[@]}\"; do\r    echo $var\r\B\B\B\Bdone\P" "  bfoa (foreach a)"
bfok "for key in \"${!dict[@]}\"; do\r    \pecho \"$key = ${dict[$key]}\"\r\B\B\B\Bdone\P" "  bfok (foreach k,v)"
barr "arr=(\pval1 val2)\P" "  barr(ay)"
bdic "declare -A \pdict\rdict[\"key\"]=\"value\"\r\P" "  bdic(t)"
ru   "read -n1 -r -p \"choose [y]es|[n]o: \"\r echo $REPLY\r" " \ecCr\ecAead \ecCu\ecAser"
 "" "" 
 "" "</FOLD>"
