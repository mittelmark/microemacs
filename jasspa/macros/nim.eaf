 "" "</FOLD><FOLD-> \CCcControl Flow:\CCA"
ca "case \p\rof \"\":\relse:\r\r\P" "  \CCDca\CCAse"
ei "elif \p:\P" "  \CCDe\CCAl\CCDi\CCAf"
el "else:\r  " "  \CCDel\CCAse"
fo "for \p in countup(1,10):\P" "  \CCDfo\CCAr"
fu "func \p(v: type): type =\r  return\r\P" "  \CCDfu\CCAnc"
if "if \p:\r  \P" "  \CCDif\CCA"
ma "when isMainModule:\r  " "  \CCDma\CCAin"
mc "macro \p(): untyped =\r  \r\P" "  \CCDm\CCAa\CCDc\CCAro"
pr "proc \p(): int =\r  \r\P" "  \CCDpr\CCAoc"
wh "while \p:\r  \P" "  \CCDwh\CCAile"
 "" ""
 "" "</FOLD><FOLD-> \CCcInput/Output:\CCA"
or "var file = open(\p)\rdefer: f.close()\rvar line\rwhile f.readLine(line):\r\P" "  \CCDo\CCApen\CCDr\CCA"
ow "let f  = open(\p,fmWrite)\rdefer: f.close()\rf.writeLine(\"Hello\")\r\P" "  \CCDo\CCApen\CCDw\CCA"
 "" "</FOLD>"
