;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Created By    : Detlef Groth
;  Created       : Fri Mar 6th, 2025
;  Last Modified : <250824.1351>
;
;  Description
;   V Language Template
;   https://vlang.io/
;
;  Notes: Based on the Go language defintion
;
;  History: 2025-06-11 first version
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


define-macro fhook-v
    set-variable $buffer-mask "luh1"
    @# buffer-init "v"
    buffer-init-hooks
!emacro

; buffer-init variables
; TODO: disable Tab mode
set-variable .fhook-v.setup &reg "/history/fhook/v" "bdfghinopTx"
set-variable .fhook-v.setup-mask "abdefghikmnopux"
set-variable .fhook-v.comment "|/*| */|*| * | * |fr|"

set-variable .fhook-v.collapse-open  "^\\(fn\\|pub fn\\)"
set-variable .fhook-v.collapse-close "^}"
set-variable .fhook-v.collapse-mclose "1"
set-variable .fhook-v.collapse-mnext "-1"

set-variable .fhook-v.item-list-s1 "^[\t ]*fn[\t ]+\\(\\w[\\.1-9A-Za-z_]*\\)"
set-variable .fhook-v.item-list-r1 "func \ecB\\1\ecA"
set-variable .fhook-v.item-list-s2 "^pub [\t ]*fn[\t ]+\\(\\w[\\.1-9A-Za-z_]*\\)"
set-variable .fhook-v.item-list-r2 "\ecCfunc\ecA \ecB\\1\ecA"
set-variable .fhook-v.item-list-s3 "^[\t ]*struct[\t ]+\\(\\w[1-9A-Za-z_]*\\)"
set-variable .fhook-v.item-list-r3 "strc \ecB\\1\ecA"
set-variable .fhook-v.item-list-s4 "^pub struct[\t ]+\\(\\w[1-9A-Za-z_]*\\)"
set-variable .fhook-v.item-list-r4 "\ecCstrc\ecA \ecB\\1\ecA"
set-variable .fhook-v.item-list-s5 "^[\t ]*fn[\t ]+(\\w* +\\([1-9A-Za-z_]*\\)) *\\(\\w[1-9A-Za-z_]*\\)"
set-variable .fhook-v.item-list-r5 "meth \ecB\\1.\\2\ecA"

!if &not &exist .hilight.v
    set-variable .hilight.v  &pinc .hilight.next 1
!endif

!if &and &sin "h" .fhook-v.setup &band .hilight.flags 0x02
  0 hilight .hilight.v 0x00 $global-scheme
  ; Comments
  hilight .hilight.v 20 "/\\*" "*/" "" .scheme.comment
  hilight .hilight.v  2 "//"           .scheme.comment
  ; Comment TODO's
  hilight .hilight.v 20 "/\\*\\s+[Tt][Oo][Dd][Oo]" "*/" "" .scheme.error
  hilight .hilight.v 18 "//\\s*[tT][oO][dD][oO]"           .scheme.error
  
  ; Strings
  hilight .hilight.v  4 "\"" "\"" "\\"  .scheme.string
  hilight .hilight.v  4 "\'" "\'" "\\"  .scheme.string
  hilight .hilight.v  4 "\"\"\"" "\"\"\"" "\\"  .scheme.quote
  
  ; constants: A_CONSTANT_VARAIBLE
  hilight .hilight.v 1    "[A-Z_]+"        .scheme.constant
  ; package keywords
  hilight .hilight.v 0x12 "^\\s*module"    .scheme.prepro  
  hilight .hilight.v 1    "^\\s*import"    .scheme.prepro
  ; keywords
  hilight .hilight.v 1    "as"             .scheme.keyword  
  hilight .hilight.v 1    "assert"            .scheme.keyword      
  hilight .hilight.v 1    "asm"            .scheme.keyword    
  hilight .hilight.v 1    "atomic"            .scheme.keyword        
  hilight .hilight.v 1    "break"          .scheme.keyword
  hilight .hilight.v 1    "const"          .scheme.keyword
  hilight .hilight.v 1    "continue"       .scheme.keyword    
  hilight .hilight.v 1    "defer"          .scheme.keyword
  hilight .hilight.v 1    "else"           .scheme.keyword
  hilight .hilight.v 1    "for"            .scheme.keyword
  hilight .hilight.v 1    "fn"             .scheme.keyword
  hilight .hilight.v 1    "go"             .scheme.keyword
  hilight .hilight.v 1    "goto"           .scheme.keyword
  hilight .hilight.v 1    "if"             .scheme.keyword
  hilight .hilight.v 1    "implements"     .scheme.keyword
  hilight .hilight.v 1    "in"             .scheme.keyword  
  hilight .hilight.v 1    "interface"      .scheme.keyword
  hilight .hilight.v 1    "is"             .scheme.keyword  
  hilight .hilight.v 1    "isreftype"      .scheme.keyword
  hilight .hilight.v 1    "lock"           .scheme.keyword      
  hilight .hilight.v 1    "mut"            .scheme.keyword  
  hilight .hilight.v 1    "pub"            .scheme.keyword    
  hilight .hilight.v 1    "return"         .scheme.keyword
  hilight .hilight.v 1    "rlock"          .scheme.keyword  
  hilight .hilight.v 1    "select"         .scheme.keyword
  hilight .hilight.v 1    "shared"         .scheme.keyword  
  hilight .hilight.v 1    "sizeof"         .scheme.keyword    
  hilight .hilight.v 1    "spawn"          .scheme.keyword
  hilight .hilight.v 1    "struct"         .scheme.keyword
  hilight .hilight.v 1    "type"           .scheme.keyword
  hilight .hilight.v 1    "typeof"         .scheme.keyword  
  hilight .hilight.v 1    "false"          .scheme.operator
  hilight .hilight.v 1    "iotae"          .scheme.operator  
  hilight .hilight.v 1    "or"             .scheme.operator
  hilight .hilight.v 1    "true"           .scheme.operator
  hilight .hilight.v 1    "any"            .scheme.type
  hilight .hilight.v 1    "bool"           .scheme.type
  hilight .hilight.v 1    "byte"           .scheme.type  
  hilight .hilight.v 1    "complex64"      .scheme.type    
  hilight .hilight.v 1    "complex128"     .scheme.type      
  hilight .hilight.v 1    "enum"           .scheme.type
  hilight .hilight.v 1    "f32"            .scheme.type        
  hilight .hilight.v 1    "f64"            .scheme.type          
  hilight .hilight.v 1    "int"            .scheme.type
  hilight .hilight.v 1    "i8"             .scheme.type
  hilight .hilight.v 1    "i16"            .scheme.type
  hilight .hilight.v 1    "i32"            .scheme.type
  hilight .hilight.v 1    "i64"            .scheme.type
  hilight .hilight.v 1    "isize"          .scheme.type  
  hilight .hilight.v 1    "none"           .scheme.type
  hilight .hilight.v 1    "rune"           .scheme.type  
  hilight .hilight.v 1    "string"         .scheme.type
  hilight .hilight.v 1    "static"         .scheme.type
  hilight .hilight.v 1    "uint"           .scheme.type
  hilight .hilight.v 1    "u8"             .scheme.type
  hilight .hilight.v 1    "u16"            .scheme.type
  hilight .hilight.v 1    "u32"            .scheme.type
  hilight .hilight.v 1    "u64"            .scheme.type
  hilight .hilight.v 1    "usize"          .scheme.type  
  hilight .hilight.v 1    "uintptr"        .scheme.type  
  hilight .hilight.v 1    "union"          .scheme.type    
  hilight .hilight.v 1    "unsafe"         .scheme.type      
  hilight .hilight.v 1    "volatile"       .scheme.type      
  hilight .hilight.v 1    "voidptr"        .scheme.type  
  hilight .hilight.v 1    "__global"       .scheme.type        
  hilight .hilight.v 1    "__offsetof"     .scheme.type          
!endif

!if &sin "d" .fhook-v.setup
  0 indent  .hilight.v 0 10
  indent .hilight.v n "{"  t
  indent .hilight.v o "}" -t
  indent .hilight.v e "\"" "\"" "\\"
  indent .hilight.v b "\\[" "]"
  indent .hilight.v b "(" ")"
!endif

!if &not &seq &which "v" "ERROR"
  set-variable %fhook-v-lint "v vet \"%f\""
  set-variable %fhook-v-exec "v crun \"%f\""
  set-variable %fhook-v-format "v fmt -w \"%f\""
!endif

buffer-init-fhook "v"
