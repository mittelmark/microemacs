; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2002-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Fri Aug 10 10:28:53 2001
; Synopsis:    Create a list of abbreviations for the toolbar
; Authors:     Steven Phillips
;
!if &band .hilight.flags 0x01
    !if &not &exist .hilight.abbrev-item
        set-variable .hilight.abbrev-item &pinc .hilight.next 1
    !endif
    0 hilight .hilight.abbrev-item 0 $global-scheme
    hilight .hilight.abbrev-item 0x40 ":EXSTR:.*" "" $global-scheme
    hilight .hilight.abbrev-item 0x40 "<FOLD\\+>" "+" .scheme.dir-closed
    hilight .hilight.abbrev-item 0x40 "<FOLD->" "-" .scheme.dir-open
    hilight .hilight.abbrev-item 0x40 "</FOLD>" "" $global-scheme
    hilight .hilight.abbrev-item 0x44 "\ecB" "" "\ecA" "" "" .scheme.function
    hilight .hilight.abbrev-item 0x44 "\CCc" "" "\CCA" "" "" .scheme.function
    hilight .hilight.abbrev-item 0x44 "\ecC" "" "\ecA" "" "" .scheme.keyword
    hilight .hilight.abbrev-item 0x44 "\ecD" "" "\ecA" "" "" .scheme.operator
    hilight .hilight.abbrev-item 0x44 "\CCD" "" "\CCA" "" "" .scheme.variable
    hilight .hilight.abbrev-item 0x44 "\ecE" "" "\ecA" "" "" .scheme.variable
    hilight .hilight.abbrev-item 0x44 "\ecF" "" "\ecA" "" "" .scheme.string
!endif

0 define-macro eaf-list-fold-find-close
    set-variable #l1 $window-aline
    set-variable #l0 1
    !repeat
        !force search-forward "<FOLD[+-]>\\|</FOLD>"
        !if &not $status
            ml-write &spr  "[missing </FOLD> for <FOLD+> on line %d]" &sub #l1 3
            !abort
        !elif &seq @s0 "</FOLD>"
            !if &not &dec #l0 1
                !return
            !endif
        !else
            set-variable #l0 &add #l0 1
        !endif
    !until 0
!emacro

define-macro eaf-list-execute
    0 show-region
    set-variable #l5 $result
    !if &xseq &rig @wl $window-col "\\(</FOLD>\\)*<FOLD[+-]>.*"
        set-variable #l0 &add 4 &add $window-col &sin "<FOLD" &rig @wl $window-col
        set-variable #l1 &con &seq &mid @wl #l0 1 "-" "+" "-"
        -1 buffer-mode "view"
        set-variable #l2 $window-line
        set-variable #l9 $buffer-bname
        !force 0 find-buffer :eaf-list
        !if $status
            set-variable $window-line #l2
            set-variable $window-col #l0
            forward-delete-char
            insert-string #l1
            !if &seq #l1 "+"
                set-variable $window-line &add #l2 1
                set-mark
                !force eaf-list-fold-find-close
                !if $status
                    set-variable #l3 $window-line
                    4 narrow-buffer
                    find-buffer #l9
                    set-variable $window-line &add #l2 1
                    set-mark
                    set-variable $window-line #l3
                    -1 kill-region
                !endif
            !else
                set-variable $window-line &add #l2 1
                !force 2 narrow-buffer
                !if $status
                    set-mark
                    set-variable $window-line &add #l2 1
                    0 copy-region
                    find-buffer #l9
                    -1 buffer-mode "view"
                    set-variable $window-line &add #l2 1
                    yank
                    -1 yank
                !endif
            !endif
            find-buffer #l9
            set-variable $window-line #l2
        !endif
        set-variable $window-col #l0
        forward-delete-char
        insert-string #l1
        -1 buffer-mode "edit"
        1 buffer-mode "view"
        goto-position "\x82"
    !elif &not &set #l0 &sin ":EXSTR:" @wl
        goto-position "\x82"
    !elif &seq &trb &lef @wl &add $window-col 1 ""
        goto-position "\x82"
    !elif &seq &trb &mid @wl $window-col &sub &sub #l0 1 $window-col ""
        goto-position "\x82"
    !else
        set-variable #l0 &rig @wl &add #l0 6
        goto-position "\x82"
        !if &band #l5 1
            !force show-region
        !endif
        execute-line &spr "execute-string \"%s\"" #l0
    !endif
!emacro

0 define-macro eaf-list-create
    set-position "\x86"
    !if &exi :chook
        set-variable #l9 :chook
    !elif &seq &set #l9 &rig $buffer-fhook 6 ""
        set-variable #l9 "default"
    !endif
    set-variable #l0 &cat "*eaf-list*" &cat @3 #l9
    find-buffer @1
    -1 buffer-mode "undo"
    -1 buffer-mode "view"
    beginning-of-buffer
    set-mark
    end-of-buffer
    -1 kill-region
    !if &band @# 0x003
        ; If this is a tool create or toolbar refresh then force a complete update
        !force 0 delete-buffer #l0
    !endif
    !force 0 find-buffer #l0
    !if &not $status
        find-buffer #l0
        1 buffer-mode "hide"
        1 buffer-mode "magic"
        -1 buffer-mode "undo"
        set-variable #l7 &ind &spr ".fhook-%s.name" #l9
        !if &seq #l7 "ERROR"
            set-variable #l7 &cat &sup &lef #l9 1 &rig #l9 1
        !endif
        insert-string &spr "%s %s\n" #l7 @2
        set-variable #l1 "*eaf-list-tmp*"
        !force 0 delete-buffer #l1
        find-buffer #l1
        !force insert-file &find &cat @3 #l9 ".eaf"
        ; process inserts first
        beginning-of-buffer
        !force search-forward " +<INCLUDE: *\\([^>\n]+\\)>"
        !while $status
            beginning-of-line
            set-mark
            forward-line
            -1 kill-region
            !force insert-file &find @s1 ".eaf"
            exchange-point-and-mark
            !force search-forward " +<INCLUDE: *\\([^>\n]+\\)>"
        !done
        set-variable #l2 1
        beginning-of-buffer
        !while &not &seq @wc ""
            set-variable #l3 &xre @wl "^\\([^ ]*\\)? +\"\\(\\(\\\\.\\|[^\\\\\"\n]\\)*\\)\" +\"\\(\\(\\\\.\\|[^\\\\\"\n]\\)*\\)\".*" "\\4"
            !if &not &seq #l3 @wl
                set-variable #l4 &xre @wl "^\\([^ ]*\\)? +\"\\(\\(\\\\.\\|[^\\\\\"\n]\\)*\\)\" +\"\\(\\(\\\\.\\|[^\\\\\"\n]\\)*\\)\".*" "\\2"
                find-buffer #l0
                end-of-buffer
                !if &seq #l3 ""
                    insert-newline
                !else
                    execute-line &spr "insert-string \"%s\"" #l3
                    !if &not &seq #l4 ""
                        insert-string &cat ":EXSTR:" #l4
                    !endif
                !endif
                find-buffer #l1
            !endif
            set-variable $window-line &inc #l2 1
        !done
        !force 0 delete-buffer #l1
        find-buffer #l0
        end-of-buffer
        !force search-backward "<FOLD\\+>"
        !while $status
            set-variable #l1 $window-line
            forward-line
            beginning-of-line
            set-mark
            !force eaf-list-fold-find-close
            !if $status
                4 narrow-buffer
            !endif
            set-variable $window-line #l1
            !force search-backward "<FOLD\\+>"
        !done
        -1 buffer-mode "edit"
    !endif
    beginning-of-buffer
    set-mark
    end-of-buffer
    0 copy-region
    -1 find-buffer #l0
    find-buffer @1
    yank
    -1 yank
    !force forward-delete-char
    beginning-of-buffer
    set-variable $line-scheme .scheme.header
    set-variable $buffer-hilight .hilight.abbrev-item
    set-variable :mouse-pick-1 mouse-void
    set-variable :mouse-drop-1 eaf-list-execute
    set-variable :eaf-list #l0
    -1 buffer-mode "edit"
    1 buffer-mode "view"
    goto-position "\x86"
!emacro

0 define-macro abbrev-list-create
    @# eaf-list-create "*abbrev-list*" "Abbrevs" ""
!emacro

0 define-macro tool-list-create
    @# eaf-list-create "*tool-list*" "Tools" "hk"
!emacro

define-macro abbrev-list
    set-position "\x81"
    !force &cond @? 1 0 abbrev-list-create
    !if &not $status
        goto-position "\x81"
        ml-write "[Failed to load abbreviation list for current buffer]"
        !abort
    !endif
    goto-position "\x81"
    delete-other-windows
    !if &equ @# 2
      split-window-vertically
    !else
      split-window-horizontally
    !endif
    find-buffer "*abbrev-list*"
    3 next-window

    ;popup-window "*abbrev-list*"
    ;goto-position "\x81"
!emacro
