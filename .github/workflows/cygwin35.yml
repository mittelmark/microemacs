name: Binaries Windows-Cygwin 3.5
inputs:
  install-dir:
    description: Installation directory
    required: false
    default: C:\tools\cygwin
  packages:
    description: Packages to install, separated by a space
    required: false
  env:
    description: Value to set as the CYGWIN environment variable
    required: false
  hardlinks:
    description: Convert symlinks in /usr/bin to hardlinks
    required: false
    default: 0

on:
  workflow_dispatch:
    branches: [ master ]
env:
   VERSION: "091225b2"
jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Install Cygwin
      run: |
        New-Variable os -Value ('${{ runner.os }}') -Option Constant
        New-Variable windows_host -Value ($os -eq 'Windows') -Option Constant

        if (!$windows_host) {
            throw "Sorry, installing Cygwin is unsupported on $os"
        }
        New-Variable install_dir -Value '${{ inputs.install-dir }}' -Option Constant
        New-Variable packages -Value '${{ inputs.packages }}' -Option Constant
        function Locate-Choco {
            $path = Get-Command 'choco' -ErrorAction SilentlyContinue
            if ($path) {
                $path.Path
            } else {
                Join-Path ${env:ProgramData} 'chocolatey' 'bin' 'choco'
            }
        }

        $choco = Locate-Choco
        $choco_params = @(
            'install',
            'cygwin',
            '--version=3.5.3',
            '-y',
            '--no-progress',
            "--package-parameters='/InstallDir:$install_dir'"
        )
        # Assuming that Cygwin is not installed when this is run.
        & $choco $choco_params
        # /usr/bin is really just /bin on Cygwin.
        echo (Join-Path $install_dir bin) >> $env:GITHUB_PATH
        echo (Join-Path $install_dir usr local bin) >> $env:GITHUB_PATH
        echo 'CYGWIN=${{ inputs.env }}' >> $env:GITHUB_ENV
        & $choco install cyg-get 
      shell: pwsh
