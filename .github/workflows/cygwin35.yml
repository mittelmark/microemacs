name: Binaries Windows-Cygwin 3.5
description: Install Cygwin & packages

on:
  workflow_dispatch:
    branches: [ master ]
env:
   VERSION: "091225b2"
   INSTALLDIR: c:\cygwin35
jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Install Cygwin
      run: |
        New-Variable os -Value ('${{ runner.os }}') -Option Constant
        New-Variable windows_host -Value ($os -eq 'Windows') -Option Constant

        if (!$windows_host) {
            throw "Sorry, installing Cygwin is unsupported on $os"
        }
        New-Variable install_dir -Value '${{ env.INSTALLDIR }}' -Option Constant
        function Locate-Choco {
            $path = Get-Command 'choco' -ErrorAction SilentlyContinue
            if ($path) {
                $path.Path
            } else {
                Join-Path ${env:ProgramData} 'chocolatey' 'bin' 'choco'
            }
        }

        $choco = Locate-Choco
        $choco_params = @(
            'install',
            'cygwin',
            '--version=3.5.3',
            '-y',
            '--no-progress',
            "--package-parameters='/InstallDir:$install_dir'"
        )
        # Assuming that Cygwin is not installed when this is run.
        & $choco $choco_params
        # /usr/bin is really just /bin on Cygwin.
        echo (Join-Path $install_dir bin) >> $env:GITHUB_PATH
        echo (Join-Path $install_dir usr local bin) >> $env:GITHUB_PATH
        echo 'CYGWIN=${{ inputs.env }}' >> $env:GITHUB_ENV
        & $choco install cyg-get 
      shell: pwsh
    - name: Modify PATH
      run: |
        echo "C:\ProgramData\choclatey\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\cygwin35\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh        
    - name: Verify Cygwin installation
      shell: pwsh
      run: |
        echo $PATH
        cyg-get install bash
        cyg-get install git
        cyg-get install make
        apt-cyg install gcc-core
        apt-cyg install gcc-g++        
        bash --version
        & dir c:\ProgramData\chocolatey\bin
        & dir c:\ProgramData\chocolatey
        & dir c:\cygwin35\bin
    - name: Check Cygwin version                
      shell: C:\cygwin35\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      run: |
        which bash
        bash --version
        cygcheck -cd cygwin 
        ls -l /cygdrive/c/cygwin35/bin
        #which bash
        #bash --version
        #  uname -a
        #echo "cygcheck"
        #cygcheck -cd cygwin 
        #echo "/c/cygwin/bin"

        #ls -l /cygdrive/c/cygwin/bin
        #echo "/c/ProgramData ..."        
        #ls -l /cygdrive/c/ProgramData/chocolatey/bin
        #which cygwin
        #/cygdrive/c/ProgramData/chocolatey/bin/cygwin.exe --version
        
                
