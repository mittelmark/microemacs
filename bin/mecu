#!/bin/bash
## file: mecu 
## Description: wrapper to run MicroEmacs with extended character settings
##              on UTF-8 enabled terminals
##  
## Tools required:
##   abduco: session management and detacher
##           https://www.brain-dump.org/projects/abduco/   
##   luit:   filter between non-utf-8 applications and utf-8 terminals
##           https://invisible-island.net/luit/
## Installation:
##           fedora: sudo dnf install abduco luit  
##           debian: sudo apt install abduco luit
## should work with Bash and Zsh

function theme-artur {
    printf "\033]4;0;#3d352a;1;#cd5c5c;2;#86af80;3;#e8ae5b;4;#6495ed;5;#deb887;6;#b0c4de;7;#bbaa99;8;#554444;9;#cc5533;10;#88aa22;11;#ffa75d;12;#87ceeb;13;#996600;14;#b0c4de;15;#ddccbb\007"
    printf "\033]10;#ddeedd;#1c1c1c;#e2bbef\007"
    printf "\033]17;#4d4d4d\007"
    printf "\033]19;#ffffff\007"
    printf "\033]5;0;#ffffff\007"
}
function theme-ayu-dark {
    printf "\033]4;0;#000000;1;#ff3333;2;#b8cc52;3;#e7c547;4;#36a3d9;5;#f07178;6;#95e6cb;7;#ffffff;8;#323232;9;#ff6565;10;#eafe84;11;#fff779;12;#68d5ff;13;#ffa3aa;14;#c7fffd;15;#ffffff\007"
    printf "\033]10;#e6e1cf;#0f1419;#f29718\007"
    printf "\033]17;#253340\007"
    printf "\033]19;#e6e1cf\007"
    printf "\033]5;0;#e6e1cf\007"
}

function theme-dracula {
    printf "\033]4;0;#21222c;1;#ff5555;2;#50fa7b;3;#ffcb6b;4;#82aaff;5;#c792ea;6;#8be9fd;7;#f8f8f2;8;#545454;9;#ff6e6e;10;#69ff94;11;#ffcb6b;12;#d6acff;13;#ff92df;14;#a4ffff;15;#f8f8f2\007"
    printf "\033]10;#f8f8f2;#212121;#eceff4\007"
    printf "\033]17;#f8f8f2\007"
    printf "\033]19;#545454\007"
    printf "\033]5;0;#ffffff\007"
}
function theme-espresso {
    printf "\033]4;0;#353535;1;#d25252;2;#a5c261;3;#ffc66d;4;#6c99bb;5;#d197d9;6;#bed6ff;7;#eeeeec;8;#535353;9;#f00c0c;10;#c2e075;11;#e1e48b;12;#8ab7d9;13;#efb5f7;14;#dcf4ff;15;#ffffff\007"
    printf "\033]10;#ffffff;#323232;#d6d6d6\007"
    printf "\033]17;#5b5b5b\007"
    printf "\033]19;#ffffff\007"
    printf "\033]5;0;#ffffff\007"
}
function theme-iterm {
    printf "\033]4;0;#000000;1;#c91b00;2;#00c200;3;#c7c400;4;#2225c4;5;#ca30c7;6;#00c5c7;7;#ffffff;8;#686868;9;#ff6e67;10;#5ffa68;11;#fffc67;12;#6871ff;13;#ff77ff;14;#60fdff;15;#ffffff\007"
    printf "\033]10;#ffffff;#000000;#e5e5e5\007"
    printf "\033]17;#c1deff\007"
    printf "\033]19;#000000\007"
    printf "\033]5;0;#ffffff\007"
}
theme=""
encoding="ISO8859-15"
if [[ "$BASH_VERSION" ]]; then
    # Parse options
    ## Bash running
    while getopts ":t:e:" opt; do
      case ${opt} in
        t)
          theme=${OPTARG}; 
          ;;
        e)
          encoding=${OPTARG}
          ;;
        :)
          echo "Option -$OPTARG requires an argument." >&2
          exit 1
          ;;
       esac
   done
elif [[ "$ZSH_VERSION" ]]; then
    zparseopts -D -E -M -- t:=theme e:=encoding
    theme=$(echo ${theme} | sed -E 's/.+[ =]//')
    encoding=$(echo ${encoding} | sed -E 's/.+[ =]//')
else
    echo "Error: This script must be run in Bash or Zsh!"
    exit 0
fi
## remove -t and -e arguments and given values
flag=0
args=()
for arg in "$@"; do
       if [[ $flag -eq 1 ]]; then
        flag=0
        continue
    fi
    if [[ "$arg" == "-t" ]]; then
        flag=1
        continue
    fi
    if [[ "$arg" == "-e" ]]; then
        flag=1
        continue
    fi
    args+=($arg)
done

## collect themes from jasspa configuration folder
if [[ -d ~/.jasspa/themes ]]; then
    themes=`ls ~/.jasspa/themes/*.sh 2>/dev/null | sed -E 's/.+themeq-(.+).sh/\1/' | paste -sd ' '`
elif [[ -d ~/.config/jasspa/themes ]]; then
    themes=`ls ~/.config/jasspa/themes/*.sh 2>/dev/null | sed -E 's/.+theme-(.+).sh/\1/' | paste -sd ' '`
else
    themes=""
fi    
if [[ -n $theme ]]; then
    if [[ $theme == "artur" ]]; then
        theme-artur
    elif [[ $theme == "ayu-dark" ]]; then
        theme-ayu-dark
    elif [[ $theme == "dracula" ]]; then
        theme-dracula
    elif [[ $theme == "espresso" ]]; then
        theme-espresso
    elif [[ $theme == "iterm" ]]; then
        theme-iterm
    elif [[ -f ~/.jasspa/themes/theme-${theme}.sh ]]; then
        source ~/.jasspa/themes/theme-${theme}.sh
    elif [[ -f ~/.config/jasspa/themes/theme-${theme}.sh ]]; then
        source ~/.config/jasspa/themes/theme-${theme}.sh
    else 
        printf "Error: Invalid theme. Valid themes are:\n       artur, ayu-dark, dracula, espresso, iterm,\n       $(echo ${themes[@]} | sed -E 's/ /, /g')\n"
        exit 0
    fi
fi
## overwrite existing parameter list 
set -- "${args[@]}"
if [[ "$1" == "-h" || "$1" == "-V" || "$1" == "-m" || "$1" == "-o" || "$1" == "-p" || "$1" == "-P" ]] ;  then 
    mecb "$@"
    if [[ "$1" == "-h" ]]; then
        printf "mecu: options:\n"
        printf "  -e ENCODING\n"
        printf "        like: ISO8859-15 (WEST-EUROPEAN) - default\n" 
        printf "              ISO8859-1  (WEST-EUROPEAN)\n"
        printf "              ISO8859-2  (CENT-EUROPEAN)\n"        
        printf "              ISO8859-3  (SOUTH-EUROPEAN)\n"
        printf "              ISO8859-4  (NORDIC/BALTIC)\n"        
        printf "              ISO8859-5  (CYRILLIC)\n"                
        printf "              ISO8859-7  (GREEK)\n"                        
        printf "              ISO8859-9  (TURKISH)\n"                                
        printf "              ISO8859-10 (NORDIC/BALTIC)\n"                                        
        printf "              ISO8859-13 (NORDIC/BALTIC)\n" 
        printf "        use: 'luit -list' to see all available ones\n\n"
        printf "  -t THEME\n"
        printf "        like: artur, ayu-dark, dracula, espresso, iterm\n"
        printf "              $(echo ${themes} | sed -E 's/ /, /g')\n"
    fi

else
    tty=$(tty | grep -Eo '[0-9]+')
    res=$(abduco -l | grep mec$tty)
    ## (press in ME Ctrl-l to update screen)
    ## running session, if no create an new one
    ## otherwise attach to the old one
    if [[ "$res" == "" ]] ; then 
        ## a new one
       TERM=xterm abduco -A -e ^z mec$tty luit -encoding $encoding mecb "$@"
    else
        ## attach to an old one
        abduco -a -e ^z mec$tty 
    fi
fi
